Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 records
ii. Business table = 10000 records
iii. Category table = 10000 records
iv. Checkin table = 10000 records
v. elite_years table = 10000 records
vi. friend table = 10000 records
vii. hours table = 10000 records
viii. photo table = 10000 records
ix. review table = 10000 records
x. tip table = 10000 records
xi. user table = 10000 records
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537 
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	There aro no NULL values for this table.
	
	SQL code used to arrive at answer:
		SELECT *
		FROM  user
		WHERE	id IS NULL
				OR name IS NULL
				OR review_count IS NULL
				OR yelping_since IS NULL
				OR useful IS NULL
				OR funny IS NULL
				OR cool IS NULL
				OR fans IS NULL
				OR average_stars IS NULL
				OR compliment_hot IS NULL
				OR compliment_more IS NULL
				OR compliment_profile IS NULL
				OR compliment_cute IS NULL
				OR compliment_list IS NULL
				OR compliment_note IS NULL
				OR compliment_plain IS NULL
				OR compliment_cool IS NULL
				OR compliment_funny IS NULL
				OR compliment_writer IS NULL
				OR compliment_photos IS NULL	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars

		min: 1		max: 5		avg: 3.7082
		
	ii. Table: Business, Column: Stars

		min: 1.0	max: 5.0	avg: 3.6549
	
	iii. Table: Tip, Column: Likes

		min: 0		max: 2		avg: 0.0144
	
	iv. Table: Checkin, Column: Count

		min: 1		max: 53		avg: 1.9414
	
	v. Table: User, Column: Review_count

		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
		SELECT city
		       ,sum(review_count)
		FROM business
		GROUP BY city
		ORDER BY sum(review_count) DESC
	
	Copy and Paste the Result Below:
	+-----------------+-------------------+
	| city            | sum(review_count) |
	+-----------------+-------------------+
	| Las Vegas       |             82854 |
	| Phoenix         |             34503 |
	| Toronto         |             24113 |
	| Scottsdale      |             20614 |
	| Charlotte       |             12523 |
	| Henderson       |             10871 |
	| Tempe           |             10504 |
	| Pittsburgh      |              9798 |
	| Montréal        |              9448 |
	| Chandler        |              8112 |
	| Mesa            |              6875 |
	| Gilbert         |              6380 |
	| Cleveland       |              5593 |
	| Madison         |              5265 |
	| Glendale        |              4406 |
	| Mississauga     |              3814 |
	| Edinburgh       |              2792 |
	| Peoria          |              2624 |
	| North Las Vegas |              2438 |
	| Markham         |              2352 |
	| Champaign       |              2029 |
	| Stuttgart       |              1849 |
	| Surprise        |              1520 |
	| Lakewood        |              1465 |
	| Goodyear        |              1155 |
	+-----------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars AS 'Star Rating'
       ,count(stars) AS Count
FROM business
WHERE city = 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars AS 'Star Rating'
       ,count(stars) AS Count
FROM business
WHERE city = 'Beachwood'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| Star Rating | Count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

	SELECT name,review_count
	FROM user
	ORDER BY review_count DESC
	LIMIT 3	
		
	Copy and Paste the Result Below:
	+--------+--------------+
	| name   | review_count |
	+--------+--------------+
	| Gerald |         2000 |
	| Sara   |         1629 |
	| Yuri   |         1339 |
	+--------+--------------+	


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	SELECT review_count
	       ,fans
	FROM user
	ORDER BY review_count DESC

	+--------------+------+
	| review_count | fans |
	+--------------+------+
	|         2000 |  253 |
	|         1629 |   50 |
	|         1339 |   76 |
	|         1246 |  101 |
	|         1215 |  126 |
	|         1153 |  311 |
	|         1116 |   16 |
	|         1039 |  104 |
	|          968 |  497 |
	|          930 |  173 |
	|          904 |   38 |
	|          864 |   43 |
	|          862 |  124 |
	|          861 |  115 |
	|          842 |   85 |
	|          836 |   37 |
	|          834 |  120 |
	|          813 |  159 |
	|          775 |   61 |
	|          754 |   78 |
	|          702 |   35 |
	|          696 |   10 |
	|          694 |  101 |
	|          676 |   25 |
	|          675 |   45 |
	+--------------+------+
	(Output limit exceeded, 25 of 10000 total rows shown)


From the results, we can see there is no correlation. 
As for those whose review_count are more 1000, some of their fans are only under 100, on the other hand, for those whose review_count are less than 1000, some of their fans are more than 100, even up to 497.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	The result shows that the count of love is obviously more than that of hate, which is 1780 > 232.
	
	SQL code used to arrive at answer:

	SELECT (SELECT count(text)
		FROM review
		WHERE TEXT like "%love%") AS love_text
		,(SELECT count(text) 
		FROM review
		WHERE TEXT like "%hate%") AS hate_text

	+-----------+-----------+
	| love_text | hate_text |
	+-----------+-----------+
	|      1780 |       232 |
	+-----------+-----------+
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT name
	       ,fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10
	
	Copy and Paste the Result Below:
	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   YES


ii. Do the two groups you chose to analyze have a different number of reviews?
    YES         
         

iii. Are you able to infer anything from the location data provided between these two groups? Explain.
     As we can see from the table, there is a huge difference.
SQL code used for analysis:

SELECT CASE 
       WHEN stars BETWEEN 2 AND 3 THEN 0
       WHEN stars BETWEEN 4 AND 5 THEN 1
       ELSE 'Other'
       END  'Label'
       ,avg(review_count)
FROM business b
INNER JOIN category c ON b.id = c.business_id
INNER JOIN hours h ON b.id = h.business_id 
GROUP BY Label

+-------+-------------------+
| Label | avg(review_count) |
+-------+-------------------+
|     0 |     32.6698412698 |
|     1 |     91.2322077922 |
| Other |     29.4196078431 |
+-------+-------------------+
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

Open:= 31.757
Closed:= 23.198         
         
ii. Difference 2:
         
Open:= 3.679
Closed:= 3.520           
         
SQL code used for analysis:
SELECT COUNT(DISTINCT(id))
       ,AVG(review_count)
       ,SUM(review_count)
       ,AVG(stars)
       ,is_open
FROM business
GROUP BY is_open

+---------------------+-------------------+-------------------+---------------+---------+
| COUNT(DISTINCT(id)) | AVG(review_count) | SUM(review_count) |    AVG(stars) | is_open |
+---------------------+-------------------+-------------------+---------------+---------+
|                1520 |     23.1980263158 |             35261 | 3.52039473684 |       0 |
|                8480 |     31.7570754717 |            269300 | 3.67900943396 |       1 |
+---------------------+-------------------+-------------------+---------------+---------+
	

3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
   TBA
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
                  
iii. Output of your finished dataset:
         
         
iv. Provide the SQL code you used to create your final dataset: